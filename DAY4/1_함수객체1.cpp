// 3_함수객체1
// => C++98 시절부터 사용되던 개념.
#include <iostream>

// #1. 함수 객체(function object)
// => () 연산자를 재정의 해서 함수 처럼 사용가능한 객체
// => 대부분 () 연산자 함수는 상수 함수로 만들게 됩니다.

// 일반 함수를 사용하면 되는데 왜, 함수 객체를 사용하나요 ?
// 1. closure 개념
// 2. 특정 상황에서 일반 함수 보다 함수객체가 빠릅니다.
// 3. 그외에도 장점이 아주 많습니다...

struct Plus
{
	int operator()(int a, int b) const
	{
		return a + b;
	}
};

int main()
{
	Plus p;		// p 는 함수가 아닌 객체 입니다.(Plus 타입)

	int n1 = p(1, 2); // 객체인 p를 함수 처럼 사용합니다. 함수객체 라고 합니다.
	int n2 = p.operator()(1, 2); // 컴파일러가 위 코드를 이렇게 변경합니다.
				

}
